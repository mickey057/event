-- MySQL Script generated by MySQL Workbench
-- Tue Jan 10 16:52:14 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema myeventdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema myeventdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `myeventdb` DEFAULT CHARACTER SET utf8 ;
USE `myeventdb` ;

-- -----------------------------------------------------
-- Table `myeventdb`.`artist`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`artist` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`artist` (
  `id` INT NOT NULL,
  `artist_name` VARCHAR(255) NULL,
  `genre_id` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`concert_group`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`concert_group` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`concert_group` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`concert_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`concert_role` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`concert_role` (
  `concert_id` INT NULL,
  `artist_id` INT NULL,
  `role_id` INT NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`customer` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`customer` (
  `id` INT NOT NULL,
  `customer_name` VARCHAR(255) NULL,
  `user_name` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `confirmation_code` VARCHAR(45) NULL,
  `confirmation_time` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`customer_order`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`customer_order` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`customer_order` (
  `id` INT NOT NULL,
  `customer_id` INT NULL,
  `order_time` DATETIME NULL,
  `delivery_address` VARCHAR(255) NOT NULL,
  `delivery_email_address` VARCHAR(255) NULL,
  `preferred_delivery_time` DATETIME NOT NULL,
  `time_paid` DATETIME NULL,
  `time_sent` DATETIME NOT NULL,
  `total_price` DECIMAL(10) NULL,
  `discount` DECIMAL(10) NULL,
  `final_price` DECIMAL(10) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`event`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`event` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`event` (
  `idevent` INT NOT NULL AUTO_INCREMENT,
  `concert_name` VARCHAR(255) NULL,
  `artiste_id` INT NULL,
  `date` DATETIME NULL,
  `venue_id` INT NULL,
  `concert_group_id` INT NOT NULL,
  PRIMARY KEY (`idevent`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`genre`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`genre` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`genre` (
  `id` INT NOT NULL,
  `genre_name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`order_ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`order_ticket` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`order_ticket` (
  `id` INT NOT NULL,
  `customer_order_id` INT NULL,
  `ticket_id` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`role` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`role` (
  `id` INT NOT NULL,
  `role_name` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`ticket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`ticket` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`ticket` (
  `id` INT NOT NULL,
  `serial_number` VARCHAR(255) NULL,
  `concert_id` INT NULL,
  `tickey_category_id` INT NULL,
  `seat` VARCHAR(255) NOT NULL,
  `purchase_date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`ticket_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`ticket_category` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`ticket_category` (
  `id` INT NOT NULL,
  `description` VARCHAR(255) NULL,
  `price` DECIMAL(10) NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `area` VARCHAR(255) NOT NULL,
  `concert_id` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myeventdb`.`venue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `myeventdb`.`venue` ;

CREATE TABLE IF NOT EXISTS `myeventdb`.`venue` (
  `id` INT NOT NULL,
  `venue_name` VARCHAR(255) NULL,
  `location` VARCHAR(255) NULL,
  `type` VARCHAR(255) NULL,
  `capacity` INT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
